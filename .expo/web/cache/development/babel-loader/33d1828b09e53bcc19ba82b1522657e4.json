{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elija\\\\Desktop\\\\SmartShop\\\\Cost.js\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { BarChart } from \"react-native-chart-kit\";\nimport { Table, Row, Rows } from 'react-native-table-component';\n\nvar Cost = function (_React$Component) {\n  _inherits(Cost, _React$Component);\n\n  function Cost(props) {\n    var _this;\n\n    _classCallCheck(this, Cost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Cost).call(this, props));\n    _this.state = {\n      tableHead: ['Month', 'Cost'],\n      tableData: [['January', '$20.45'], ['February', '$45.36'], ['March', '$102.43'], ['April', '$97.61'], ['May', '$64.76'], ['June', '$83.39'], ['July', '$97.34'], ['August', '$54.63'], ['October', '$34.63'], ['November', '$111.15'], ['December', '$120.23']]\n    };\n    return _this;\n  }\n\n  _createClass(Cost, [{\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      var barData = {\n        labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        datasets: [{\n          data: [20, 45, 28, 80, 99, 43, 150, 160, 40, 20, 20, 0]\n        }]\n      };\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, React.createElement(Text, {\n        style: styles.otherText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, \"Yearly Costs\"), React.createElement(BarChart, {\n        data: barData,\n        width: 100,\n        height: 100,\n        yAxisLabel: '$',\n        chartConfig: chartConfig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }), React.createElement(Table, {\n        borderStyle: {\n          borderWidth: 2,\n          borderColor: '#c8e1ff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(Row, {\n        data: state.tableHead,\n        style: styles.head,\n        textStyle: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }), React.createElement(Rows, {\n        data: state.tableData,\n        textStyle: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      })));\n    }\n  }]);\n\n  return Cost;\n}(React.Component);\n\nexport { Cost as default };\nvar chartConfig = {\n  backgroundGradientFromOpacity: 0,\n  backgroundGradientToOpacity: 0,\n  color: function color() {\n    var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return \"rgba(0,60, 300, \" + opacity + \")\";\n  },\n  strokeWidth: 2,\n  barPercentage: 0.4,\n  useShadowColorFromDataset: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fff'\n  },\n  head: {\n    height: 40,\n    backgroundColor: '#f1f8ff'\n  },\n  text: {\n    margin: 6\n  },\n  otherText: {\n    color: 'darkgrey',\n    fontSize: 25\n  }\n});","map":{"version":3,"sources":["C:/Users/elija/Desktop/SmartShop/Cost.js"],"names":["React","BarChart","Table","Row","Rows","Cost","props","state","tableHead","tableData","barData","labels","datasets","data","flex","justifyContent","styles","otherText","chartConfig","borderWidth","borderColor","head","text","Component","backgroundGradientFromOpacity","backgroundGradientToOpacity","color","opacity","strokeWidth","barPercentage","useShadowColorFromDataset","StyleSheet","create","container","padding","paddingTop","backgroundColor","height","margin","fontSize"],"mappings":"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","sourcesContent":["//Documentation: https://www.npmjs.com/package/react-native-chart-kit\r\n//Documentation: https://www.npmjs.com/package/react-native-table-component\r\nimport * as React from 'react';\r\nimport { Text, View, StyleSheet} from 'react-native';\r\nimport { BarChart } from \"react-native-chart-kit\";\r\nimport { Table, Row, Rows } from 'react-native-table-component';\r\n\r\nexport default class Cost extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        tableHead: ['Month', 'Cost'],\r\n        tableData: [\r\n          ['January', '$20.45'],\r\n          ['February', '$45.36'],\r\n          ['March', '$102.43'],\r\n          ['April', '$97.61'],\r\n          ['May', '$64.76'],\r\n          ['June', '$83.39'],\r\n          ['July', '$97.34'],\r\n          ['August', '$54.63'],\r\n          ['October', '$34.63'],\r\n          ['November', '$111.15'],\r\n          ['December', '$120.23'],\r\n      ]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const state = this.state;\r\n    const barData = {\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n      datasets: [{\r\n          data: [20, 45, 28, 80, 99, 43, 150, 160, 40, 20, 20, 0 ],\r\n        },\r\n      ],\r\n    };\r\n\r\n  return (  \r\n    <View style={{ flex: 1, justifyContent: 'center' }}>\r\n      <Text style= {styles.otherText}>Yearly Costs</Text>\r\n      <BarChart\r\n        data={barData}\r\n        width={100}\r\n        height={100}\r\n        yAxisLabel={'$'}\r\n        chartConfig={chartConfig}\r\n      />\r\n        <Table borderStyle={{borderWidth: 2, borderColor: '#c8e1ff'}}>\r\n          <Row data={state.tableHead} style={styles.head} textStyle={styles.text}/>\r\n          <Rows data={state.tableData} textStyle={styles.text}/>\r\n        </Table>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst chartConfig = {\r\n  \r\n  backgroundGradientFromOpacity: 0,\r\n  backgroundGradientToOpacity: 0,\r\n  color: (opacity = 1) => `rgba(0,60, 300, ${opacity})`,\r\n  strokeWidth: 2, // optional, default 3\r\n  barPercentage: 0.4,\r\n  useShadowColorFromDataset: true // optional\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fff' },\r\n  head: { height: 40, backgroundColor: '#f1f8ff' },\r\n  text: { margin: 6 },\r\n  otherText: {\r\n    color: 'darkgrey',\r\n    fontSize: 25,\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}