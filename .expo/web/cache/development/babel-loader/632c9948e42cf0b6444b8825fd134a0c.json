{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elija\\\\Desktop\\\\SmartShop\\\\App.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImagePicker from \"react-native-image-picker\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      photo: null\n    };\n\n    _this.handleChoosePhoto = function () {\n      var options = {};\n      ImagePicker.launchImageLibrary(options, function (response) {\n        console.log(\"response\", response);\n\n        if (response.uri) {\n          _this.setState({\n            photo: response\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var photo = this.state.photo;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, photo && React.createElement(Image, {\n        source: {\n          uri: photo.uri\n        },\n        style: {\n          width: 300,\n          height: 300\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        }\n      }), React.createElement(Button, {\n        title: \"Choose Photo\",\n        onPress: this.handleChoosePhoto,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/elija/Desktop/SmartShop/App.js"],"names":["React","ImagePicker","App","state","photo","handleChoosePhoto","options","launchImageLibrary","response","console","log","uri","setState","flex","alignItems","justifyContent","width","height","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;;IAEqBC,G;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAIRC,iB,GAAoB,YAAM;AACtB,UAAMC,OAAO,GAAG,EAAhB;AACAL,MAAAA,WAAW,CAACM,kBAAZ,CAA+BD,OAA/B,EAAwC,UAAAE,QAAQ,EAAI;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AACA,YAAIA,QAAQ,CAACG,GAAb,EAAkB;AAChB,gBAAKC,QAAL,CAAc;AAAER,YAAAA,KAAK,EAAEI;AAAT,WAAd;AAED;AACF,OAND;AAOD,K;;;;;;;6BAEM;AAAA,UACCJ,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAI;AAAES,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,UAAU,EAAE,QAAvB;AAAiCC,UAAAA,cAAc,EAAE;AAAjD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA,SACGX,KAAK,IACJ,oBAAC,KAAD;AACE,QAAA,MAAM,EAAI;AAAEO,UAAAA,GAAG,EAAEP,KAAK,CAACO;AAAb,SADZ;AAEE,QAAA,KAAK,EAAI;AAAEK,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAG,cADV;AAEE,QAAA,OAAO,EAAI,KAAKZ,iBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAcD;;;;EAhC8BL,KAAK,CAACkB,S;;SAAlBhB,G","sourcesContent":["import React from 'react';\r\nimport {View, Text, Image, Button} from 'react-native';\r\nimport ImagePicker from \"react-native-image-picker\";\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    photo: null,\r\n  }; \r\n\r\n  handleChoosePhoto = () => {\r\n      const options = {};\r\n      ImagePicker.launchImageLibrary(options, response => {\r\n        console.log(\"response\", response);\r\n        if (response.uri) {\r\n          this.setState({ photo: response })\r\n\r\n        }\r\n      });\r\n    };\r\n\r\n  render() {\r\n    const { photo } = this.state;\r\n    return (\r\n      <View style = {{ flex: 1, alignItems: 'center', justifyContent: 'center'}}>\r\n        {photo && (\r\n          <Image  \r\n            source = {{ uri: photo.uri }}\r\n            style = {{ width: 300, height: 300 }}\r\n          />\r\n        )}\r\n        <Button \r\n          title = \"Choose Photo\"\r\n          onPress = {this.handleChoosePhoto}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}