{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elija\\\\Desktop\\\\SmartShop\\\\node_modules\\\\react-native-chart-kit\\\\src\\\\line-chart\\\\line-chart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Svg, Circle, Polygon, Polyline, Path, Rect, G } from \"react-native-svg\";\nimport AbstractChart from \"../abstract-chart\";\nimport { LegendItem } from \"./legend-item\";\nvar AnimatedCircle = Animated.createAnimatedComponent(Circle);\n\nvar LineChart = function (_AbstractChart) {\n  _inherits(LineChart, _AbstractChart);\n\n  function LineChart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LineChart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LineChart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.label = React.createRef();\n    _this.state = {\n      scrollableDotHorizontalOffset: new Animated.Value(0)\n    };\n\n    _this.getColor = function (dataset, opacity) {\n      return (dataset.color || _this.props.chartConfig.color)(opacity);\n    };\n\n    _this.getStrokeWidth = function (dataset) {\n      return dataset.strokeWidth || _this.props.chartConfig.strokeWidth || 3;\n    };\n\n    _this.getDatas = function (data) {\n      return data.reduce(function (acc, item) {\n        return item.data ? [].concat(_toConsumableArray(acc), _toConsumableArray(item.data)) : acc;\n      }, []);\n    };\n\n    _this.getPropsForDots = function (x, i) {\n      var _this$props = _this.props,\n          getDotProps = _this$props.getDotProps,\n          _this$props$chartConf = _this$props.chartConfig,\n          chartConfig = _this$props$chartConf === void 0 ? {} : _this$props$chartConf;\n\n      if (typeof getDotProps === \"function\") {\n        return getDotProps(x, i);\n      }\n\n      var _chartConfig$propsFor = chartConfig.propsForDots,\n          propsForDots = _chartConfig$propsFor === void 0 ? {} : _chartConfig$propsFor;\n      return _objectSpread({\n        r: \"4\"\n      }, propsForDots);\n    };\n\n    _this.renderDots = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          onDataPointClick = config.onDataPointClick;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var _this$props2 = _this.props,\n          getDotColor = _this$props2.getDotColor,\n          _this$props2$hidePoin = _this$props2.hidePointsAtIndex,\n          hidePointsAtIndex = _this$props2$hidePoin === void 0 ? [] : _this$props2$hidePoin,\n          _this$props2$renderDo = _this$props2.renderDotContent,\n          renderDotContent = _this$props2$renderDo === void 0 ? function () {\n        return null;\n      } : _this$props2$renderDo;\n      data.forEach(function (dataset) {\n        if (dataset.withDots == false) return;\n        dataset.data.forEach(function (x, i) {\n          if (hidePointsAtIndex.includes(i)) {\n            return;\n          }\n\n          var cx = paddingRight + i * (width - paddingRight) / dataset.data.length;\n          var cy = (baseHeight - _this.calcHeight(x, datas, height)) / 4 * 3 + paddingTop;\n\n          var onPress = function onPress() {\n            if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\n              return;\n            }\n\n            onDataPointClick({\n              index: i,\n              value: x,\n              dataset: dataset,\n              x: cx,\n              y: cy,\n              getColor: function getColor(opacity) {\n                return _this.getColor(dataset, opacity);\n              }\n            });\n          };\n\n          output.push(React.createElement(Circle, _extends({\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            fill: typeof getDotColor === \"function\" ? getDotColor(x, i) : _this.getColor(dataset, 0.9),\n            onPress: onPress\n          }, _this.getPropsForDots(x, i), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            }\n          })), React.createElement(Circle, {\n            key: Math.random(),\n            cx: cx,\n            cy: cy,\n            r: \"14\",\n            fill: \"#fff\",\n            fillOpacity: 0,\n            onPress: onPress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            }\n          }), renderDotContent({\n            x: cx,\n            y: cy,\n            index: i\n          }));\n        });\n      });\n      return output;\n    };\n\n    _this.renderScrollableDot = function (config) {\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingTop = config.paddingTop,\n          paddingRight = config.paddingRight,\n          scrollableDotHorizontalOffset = config.scrollableDotHorizontalOffset,\n          scrollableDotFill = config.scrollableDotFill,\n          scrollableDotStrokeColor = config.scrollableDotStrokeColor,\n          scrollableDotStrokeWidth = config.scrollableDotStrokeWidth,\n          scrollableDotRadius = config.scrollableDotRadius,\n          scrollableInfoViewStyle = config.scrollableInfoViewStyle,\n          scrollableInfoTextStyle = config.scrollableInfoTextStyle,\n          scrollableInfoSize = config.scrollableInfoSize,\n          scrollableInfoOffset = config.scrollableInfoOffset;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var vl = [];\n      var perData = width / data[0].data.length;\n\n      for (var index = 0; index < data[0].data.length; index++) {\n        vl.push(index * perData);\n      }\n\n      var lastIndex;\n      scrollableDotHorizontalOffset.addListener(function (value) {\n        var index = value.value / perData;\n\n        if (!lastIndex) {\n          lastIndex = index;\n        }\n\n        var abs = Math.floor(index);\n        var percent = index - abs;\n        abs = data[0].data.length - abs - 1;\n\n        if (index >= data[0].data.length - 1) {\n          _this.label.current.setNativeProps({\n            text: \"\" + Math.floor(data[0].data[0])\n          });\n        } else {\n          if (index > lastIndex) {\n            var base = data[0].data[abs];\n            var prev = data[0].data[abs - 1];\n\n            if (prev > base) {\n              var rest = prev - base;\n\n              _this.label.current.setNativeProps({\n                text: \"\" + Math.floor(base + percent * rest)\n              });\n            } else {\n              var _rest = base - prev;\n\n              _this.label.current.setNativeProps({\n                text: \"\" + Math.floor(base - percent * _rest)\n              });\n            }\n          } else {\n            var _base = data[0].data[abs - 1];\n            var next = data[0].data[abs];\n            percent = 1 - percent;\n\n            if (next > _base) {\n              var _rest2 = next - _base;\n\n              _this.label.current.setNativeProps({\n                text: \"\" + Math.floor(_base + percent * _rest2)\n              });\n            } else {\n              var _rest3 = _base - next;\n\n              _this.label.current.setNativeProps({\n                text: \"\" + Math.floor(_base - percent * _rest3)\n              });\n            }\n          }\n        }\n\n        lastIndex = index;\n      });\n      data.forEach(function (dataset) {\n        if (dataset.withScrollableDot == false) return;\n        var perData = width / dataset.data.length;\n        var values = [];\n        var yValues = [];\n        var xValues = [];\n        var yValuesLabel = [];\n        var xValuesLabel = [];\n\n        for (var _index = 0; _index < dataset.data.length; _index++) {\n          values.push(_index * perData);\n          var yval = (baseHeight - _this.calcHeight(dataset.data[dataset.data.length - _index - 1], datas, height)) / 4 * 3 + paddingTop;\n          yValues.push(yval);\n          var xval = paddingRight + (dataset.data.length - _index - 1) * (width - paddingRight) / dataset.data.length;\n          xValues.push(xval);\n          yValuesLabel.push(yval - (scrollableInfoSize.height + scrollableInfoOffset));\n          xValuesLabel.push(xval - scrollableInfoSize.width / 2);\n        }\n\n        var translateX = scrollableDotHorizontalOffset.interpolate({\n          inputRange: values,\n          outputRange: xValues,\n          extrapolate: \"clamp\"\n        });\n        var translateY = scrollableDotHorizontalOffset.interpolate({\n          inputRange: values,\n          outputRange: yValues,\n          extrapolate: \"clamp\"\n        });\n        var labelTranslateX = scrollableDotHorizontalOffset.interpolate({\n          inputRange: values,\n          outputRange: xValuesLabel,\n          extrapolate: \"clamp\"\n        });\n        var labelTranslateY = scrollableDotHorizontalOffset.interpolate({\n          inputRange: values,\n          outputRange: yValuesLabel,\n          extrapolate: \"clamp\"\n        });\n        output.push([React.createElement(Animated.View, {\n          key: Math.random(),\n          style: [scrollableInfoViewStyle, {\n            transform: [{\n              translateX: labelTranslateX\n            }, {\n              translateY: labelTranslateY\n            }],\n            width: scrollableInfoSize.width,\n            height: scrollableInfoSize.height\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          }\n        }, React.createElement(TextInput, {\n          onLayout: function onLayout() {\n            _this.label.current.setNativeProps({\n              text: \"\" + Math.floor(data[0].data[data[0].data.length - 1])\n            });\n          },\n          style: scrollableInfoTextStyle,\n          ref: _this.label,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          }\n        })), React.createElement(AnimatedCircle, {\n          key: Math.random(),\n          cx: translateX,\n          cy: translateY,\n          r: scrollableDotRadius,\n          stroke: scrollableDotStrokeColor,\n          strokeWidth: scrollableDotStrokeWidth,\n          fill: scrollableDotFill,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          }\n        })]);\n      });\n      return output;\n    };\n\n    _this.renderShadow = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierShadow(config);\n      }\n\n      var data = config.data,\n          width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop;\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      return config.data.map(function (dataset, index) {\n        return React.createElement(Polygon, {\n          key: index,\n          points: dataset.data.map(function (d, i) {\n            var x = paddingRight + i * (width - paddingRight) / dataset.data.length;\n            var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n            return x + \",\" + y;\n          }).join(\" \") + (\" \" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" \" + paddingRight + \",\" + (height / 4 * 3 + paddingTop)),\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          }\n        });\n      });\n    };\n\n    _this.renderLine = function (config) {\n      if (_this.props.bezier) {\n        return _this.renderBezierLine(config);\n      }\n\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data,\n          linejoinType = config.linejoinType;\n      var output = [];\n\n      var datas = _this.getDatas(data);\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      data.forEach(function (dataset, index) {\n        var points = dataset.data.map(function (d, i) {\n          var x = i * (width - paddingRight) / dataset.data.length + paddingRight;\n          var y = (baseHeight - _this.calcHeight(d, datas, height)) / 4 * 3 + paddingTop;\n          return x + \",\" + y;\n        });\n        output.push(React.createElement(Polyline, {\n          key: index,\n          strokeLinejoin: linejoinType,\n          points: points.join(\" \"),\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368\n          }\n        }));\n      });\n      return output;\n    };\n\n    _this.getBezierLinePoints = function (dataset, config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n\n      if (dataset.data.length === 0) {\n        return \"M0,0\";\n      }\n\n      var datas = _this.getDatas(data);\n\n      var x = function x(i) {\n        return Math.floor(paddingRight + i * (width - paddingRight) / dataset.data.length);\n      };\n\n      var baseHeight = _this.calcBaseHeight(datas, height);\n\n      var y = function y(i) {\n        var yHeight = _this.calcHeight(dataset.data[i], datas, height);\n\n        return Math.floor((baseHeight - yHeight) / 4 * 3 + paddingTop);\n      };\n\n      return [\"M\" + x(0) + \",\" + y(0)].concat(dataset.data.slice(0, -1).map(function (_, i) {\n        var x_mid = (x(i) + x(i + 1)) / 2;\n        var y_mid = (y(i) + y(i + 1)) / 2;\n        var cp_x1 = (x_mid + x(i)) / 2;\n        var cp_x2 = (x_mid + x(i + 1)) / 2;\n        return \"Q \" + cp_x1 + \", \" + y(i) + \", \" + x_mid + \", \" + y_mid + (\" Q \" + cp_x2 + \", \" + y(i + 1) + \", \" + x(i + 1) + \", \" + y(i + 1));\n      })).join(\" \");\n    };\n\n    _this.renderBezierLine = function (config) {\n      return config.data.map(function (dataset, index) {\n        var result = _this.getBezierLinePoints(dataset, config);\n\n        return React.createElement(Path, {\n          key: index,\n          d: result,\n          fill: \"none\",\n          stroke: _this.getColor(dataset, 0.2),\n          strokeWidth: _this.getStrokeWidth(dataset),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          }\n        });\n      });\n    };\n\n    _this.renderBezierShadow = function (config) {\n      var width = config.width,\n          height = config.height,\n          paddingRight = config.paddingRight,\n          paddingTop = config.paddingTop,\n          data = config.data;\n      return data.map(function (dataset, index) {\n        var d = _this.getBezierLinePoints(dataset, config) + (\" L\" + (paddingRight + (width - paddingRight) / dataset.data.length * (dataset.data.length - 1)) + \",\" + (height / 4 * 3 + paddingTop) + \" L\" + paddingRight + \",\" + (height / 4 * 3 + paddingTop) + \" Z\");\n        return React.createElement(Path, {\n          key: index,\n          d: d,\n          fill: \"url(#fillShadowGradient)\",\n          strokeWidth: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440\n          }\n        });\n      });\n    };\n\n    _this.renderLegend = function (width, legendOffset) {\n      var _this$props$data = _this.props.data,\n          legend = _this$props$data.legend,\n          datasets = _this$props$data.datasets;\n      var baseLegendItemX = width / (legend.length + 1);\n      return legend.map(function (legendItem, i) {\n        return React.createElement(G, {\n          key: Math.random(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          }\n        }, React.createElement(LegendItem, {\n          index: i,\n          iconColor: _this.getColor(datasets[i], 0.9),\n          baseLegendItemX: baseLegendItemX,\n          legendText: legendItem,\n          labelProps: _objectSpread({}, _this.getPropsForLabels()),\n          legendOffset: legendOffset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456\n          }\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LineChart, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          width = _this$props3.width,\n          height = _this$props3.height,\n          data = _this$props3.data,\n          _this$props3$withScro = _this$props3.withScrollableDot,\n          withScrollableDot = _this$props3$withScro === void 0 ? false : _this$props3$withScro,\n          _this$props3$withShad = _this$props3.withShadow,\n          withShadow = _this$props3$withShad === void 0 ? true : _this$props3$withShad,\n          _this$props3$withDots = _this$props3.withDots,\n          withDots = _this$props3$withDots === void 0 ? true : _this$props3$withDots,\n          _this$props3$withInne = _this$props3.withInnerLines,\n          withInnerLines = _this$props3$withInne === void 0 ? true : _this$props3$withInne,\n          _this$props3$withOute = _this$props3.withOuterLines,\n          withOuterLines = _this$props3$withOute === void 0 ? true : _this$props3$withOute,\n          _this$props3$withHori = _this$props3.withHorizontalLabels,\n          withHorizontalLabels = _this$props3$withHori === void 0 ? true : _this$props3$withHori,\n          _this$props3$withVert = _this$props3.withVerticalLabels,\n          withVerticalLabels = _this$props3$withVert === void 0 ? true : _this$props3$withVert,\n          _this$props3$style = _this$props3.style,\n          style = _this$props3$style === void 0 ? {} : _this$props3$style,\n          decorator = _this$props3.decorator,\n          onDataPointClick = _this$props3.onDataPointClick,\n          _this$props3$vertical = _this$props3.verticalLabelRotation,\n          verticalLabelRotation = _this$props3$vertical === void 0 ? 0 : _this$props3$vertical,\n          _this$props3$horizont = _this$props3.horizontalLabelRotation,\n          horizontalLabelRotation = _this$props3$horizont === void 0 ? 0 : _this$props3$horizont,\n          _this$props3$formatYL = _this$props3.formatYLabel,\n          formatYLabel = _this$props3$formatYL === void 0 ? function (yLabel) {\n        return yLabel;\n      } : _this$props3$formatYL,\n          _this$props3$formatXL = _this$props3.formatXLabel,\n          formatXLabel = _this$props3$formatXL === void 0 ? function (xLabel) {\n        return xLabel;\n      } : _this$props3$formatXL,\n          segments = _this$props3.segments,\n          _this$props3$transpar = _this$props3.transparent,\n          transparent = _this$props3$transpar === void 0 ? false : _this$props3$transpar;\n      var scrollableDotHorizontalOffset = this.state.scrollableDotHorizontalOffset;\n      var _data$labels = data.labels,\n          labels = _data$labels === void 0 ? [] : _data$labels;\n      var _style$borderRadius = style.borderRadius,\n          borderRadius = _style$borderRadius === void 0 ? 0 : _style$borderRadius,\n          _style$paddingTop = style.paddingTop,\n          paddingTop = _style$paddingTop === void 0 ? 16 : _style$paddingTop,\n          _style$paddingRight = style.paddingRight,\n          paddingRight = _style$paddingRight === void 0 ? 64 : _style$paddingRight,\n          _style$margin = style.margin,\n          margin = _style$margin === void 0 ? 0 : _style$margin,\n          _style$marginRight = style.marginRight,\n          marginRight = _style$marginRight === void 0 ? 0 : _style$marginRight,\n          _style$paddingBottom = style.paddingBottom,\n          paddingBottom = _style$paddingBottom === void 0 ? 0 : _style$paddingBottom;\n      var config = {\n        width: width,\n        height: height,\n        verticalLabelRotation: verticalLabelRotation,\n        horizontalLabelRotation: horizontalLabelRotation\n      };\n      var datas = this.getDatas(data.datasets);\n      var count = Math.min.apply(Math, _toConsumableArray(datas)) === Math.max.apply(Math, _toConsumableArray(datas)) ? 1 : 4;\n\n      if (segments) {\n        count = segments;\n      }\n\n      var legendOffset = this.props.data.legend ? height * 0.15 : 0;\n      return React.createElement(View, {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        }\n      }, React.createElement(Svg, {\n        height: height + paddingBottom + legendOffset,\n        width: width - margin * 2 - marginRight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519\n        }\n      }, React.createElement(Rect, {\n        width: \"100%\",\n        height: height + legendOffset,\n        rx: borderRadius,\n        ry: borderRadius,\n        fill: \"url(#backgroundGradient)\",\n        fillOpacity: transparent ? 0 : 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523\n        }\n      }), this.props.data.legend && this.renderLegend(config.width, legendOffset), React.createElement(G, {\n        x: \"0\",\n        y: legendOffset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        }\n      }, this.renderDefs(_objectSpread({}, config, {}, this.props.chartConfig)), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        }\n      }, withInnerLines ? this.renderHorizontalLines(_objectSpread({}, config, {\n        count: count,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderHorizontalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        }\n      }, withHorizontalLabels ? this.renderHorizontalLabels(_objectSpread({}, config, {\n        count: count,\n        data: datas,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        formatYLabel: formatYLabel,\n        decimalPlaces: this.props.chartConfig.decimalPlaces\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        }\n      }, withInnerLines ? this.renderVerticalLines(_objectSpread({}, config, {\n        data: data.datasets[0].data,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : withOuterLines ? this.renderVerticalLine(_objectSpread({}, config, {\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        }\n      }, withVerticalLabels ? this.renderVerticalLabels(_objectSpread({}, config, {\n        labels: labels,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        formatXLabel: formatXLabel\n      })) : null), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        }\n      }, this.renderLine(_objectSpread({}, config, {}, this.props.chartConfig, {\n        paddingRight: paddingRight,\n        paddingTop: paddingTop,\n        data: data.datasets\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        }\n      }, withShadow && this.renderShadow(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingRight: paddingRight,\n        paddingTop: paddingTop\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        }\n      }, withDots && this.renderDots(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        onDataPointClick: onDataPointClick\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        }\n      }, withScrollableDot && this.renderScrollableDot(_objectSpread({}, config, {}, this.props.chartConfig, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight,\n        onDataPointClick: onDataPointClick,\n        scrollableDotHorizontalOffset: scrollableDotHorizontalOffset\n      }))), React.createElement(G, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        }\n      }, decorator && decorator(_objectSpread({}, config, {\n        data: data.datasets,\n        paddingTop: paddingTop,\n        paddingRight: paddingRight\n      }))))), withScrollableDot && React.createElement(ScrollView, {\n        style: StyleSheet.absoluteFill,\n        contentContainerStyle: {\n          width: width * 2\n        },\n        showsHorizontalScrollIndicator: false,\n        scrollEventThrottle: 16,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              x: scrollableDotHorizontalOffset\n            }\n          }\n        }]),\n        horizontal: true,\n        bounces: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        }\n      }));\n    }\n  }]);\n\n  return LineChart;\n}(AbstractChart);\n\nexport default LineChart;","map":{"version":3,"sources":["C:/Users/elija/Desktop/SmartShop/node_modules/react-native-chart-kit/src/line-chart/line-chart.js"],"names":["React","Svg","Circle","Polygon","Polyline","Path","Rect","G","AbstractChart","LegendItem","AnimatedCircle","Animated","createAnimatedComponent","LineChart","label","createRef","state","scrollableDotHorizontalOffset","Value","getColor","dataset","opacity","color","props","chartConfig","getStrokeWidth","strokeWidth","getDatas","data","reduce","acc","item","getPropsForDots","x","i","getDotProps","propsForDots","r","renderDots","config","width","height","paddingTop","paddingRight","onDataPointClick","output","datas","baseHeight","calcBaseHeight","getDotColor","hidePointsAtIndex","renderDotContent","forEach","withDots","includes","cx","length","cy","calcHeight","onPress","index","value","y","push","Math","random","renderScrollableDot","scrollableDotFill","scrollableDotStrokeColor","scrollableDotStrokeWidth","scrollableDotRadius","scrollableInfoViewStyle","scrollableInfoTextStyle","scrollableInfoSize","scrollableInfoOffset","vl","perData","lastIndex","addListener","abs","floor","percent","current","setNativeProps","text","base","prev","rest","next","withScrollableDot","values","yValues","xValues","yValuesLabel","xValuesLabel","yval","xval","translateX","interpolate","inputRange","outputRange","extrapolate","translateY","labelTranslateX","labelTranslateY","transform","renderShadow","bezier","renderBezierShadow","map","d","join","renderLine","renderBezierLine","linejoinType","points","getBezierLinePoints","yHeight","concat","slice","_","x_mid","y_mid","cp_x1","cp_x2","result","renderLegend","legendOffset","legend","datasets","baseLegendItemX","legendItem","getPropsForLabels","withShadow","withInnerLines","withOuterLines","withHorizontalLabels","withVerticalLabels","style","decorator","verticalLabelRotation","horizontalLabelRotation","formatYLabel","yLabel","formatXLabel","xLabel","segments","transparent","labels","borderRadius","margin","marginRight","paddingBottom","count","min","max","renderDefs","renderHorizontalLines","renderHorizontalLine","renderHorizontalLabels","decimalPlaces","renderVerticalLines","renderVerticalLine","renderVerticalLabels","StyleSheet","absoluteFill","event","nativeEvent","contentOffset"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  ScrollView,\n  StyleSheet,\n  Animated,\n  TextInput\n} from \"react-native\";\nimport {\n  Svg,\n  Circle,\n  Polygon,\n  Polyline,\n  Path,\n  Rect,\n  G\n} from \"react-native-svg\";\nimport AbstractChart from \"../abstract-chart\";\nimport { LegendItem } from \"./legend-item\";\n\nlet AnimatedCircle = Animated.createAnimatedComponent(Circle);\n\nclass LineChart extends AbstractChart {\n  label = React.createRef();\n\n  state = {\n    scrollableDotHorizontalOffset: new Animated.Value(0)\n  };\n\n  getColor = (dataset, opacity) => {\n    return (dataset.color || this.props.chartConfig.color)(opacity);\n  };\n\n  getStrokeWidth = dataset => {\n    return dataset.strokeWidth || this.props.chartConfig.strokeWidth || 3;\n  };\n\n  getDatas = data =>\n    data.reduce((acc, item) => (item.data ? [...acc, ...item.data] : acc), []);\n\n  getPropsForDots = (x, i) => {\n    const { getDotProps, chartConfig = {} } = this.props;\n    if (typeof getDotProps === \"function\") {\n      return getDotProps(x, i);\n    }\n    const { propsForDots = {} } = chartConfig;\n    return { r: \"4\", ...propsForDots };\n  };\n  renderDots = config => {\n    const {\n      data,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      onDataPointClick\n    } = config;\n    const output = [];\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    const {\n      getDotColor,\n      hidePointsAtIndex = [],\n      renderDotContent = () => {\n        return null;\n      }\n    } = this.props;\n\n    data.forEach(dataset => {\n      if (dataset.withDots == false) return;\n\n      dataset.data.forEach((x, i) => {\n        if (hidePointsAtIndex.includes(i)) {\n          return;\n        }\n        const cx =\n          paddingRight + (i * (width - paddingRight)) / dataset.data.length;\n        const cy =\n          ((baseHeight - this.calcHeight(x, datas, height)) / 4) * 3 +\n          paddingTop;\n        const onPress = () => {\n          if (!onDataPointClick || hidePointsAtIndex.includes(i)) {\n            return;\n          }\n\n          onDataPointClick({\n            index: i,\n            value: x,\n            dataset,\n            x: cx,\n            y: cy,\n            getColor: opacity => this.getColor(dataset, opacity)\n          });\n        };\n        output.push(\n          <Circle\n            key={Math.random()}\n            cx={cx}\n            cy={cy}\n            fill={\n              typeof getDotColor === \"function\"\n                ? getDotColor(x, i)\n                : this.getColor(dataset, 0.9)\n            }\n            onPress={onPress}\n            {...this.getPropsForDots(x, i)}\n          />,\n          <Circle\n            key={Math.random()}\n            cx={cx}\n            cy={cy}\n            r=\"14\"\n            fill=\"#fff\"\n            fillOpacity={0}\n            onPress={onPress}\n          />,\n          renderDotContent({ x: cx, y: cy, index: i })\n        );\n      });\n    });\n    return output;\n  };\n\n  renderScrollableDot = config => {\n    const {\n      data,\n      width,\n      height,\n      paddingTop,\n      paddingRight,\n      scrollableDotHorizontalOffset,\n      scrollableDotFill,\n      scrollableDotStrokeColor,\n      scrollableDotStrokeWidth,\n      scrollableDotRadius,\n      scrollableInfoViewStyle,\n      scrollableInfoTextStyle,\n      scrollableInfoSize,\n      scrollableInfoOffset\n    } = config;\n    const output = [];\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n\n    let vl = [];\n\n    const perData = width / data[0].data.length;\n    for (let index = 0; index < data[0].data.length; index++) {\n      vl.push(index * perData);\n    }\n    let lastIndex;\n\n    scrollableDotHorizontalOffset.addListener(value => {\n      const index = value.value / perData;\n      if (!lastIndex) {\n        lastIndex = index;\n      }\n\n      let abs = Math.floor(index);\n      let percent = index - abs;\n      abs = data[0].data.length - abs - 1;\n\n      if (index >= data[0].data.length - 1) {\n        this.label.current.setNativeProps({\n          text: `${Math.floor(data[0].data[0])}`\n        });\n      } else {\n        if (index > lastIndex) {\n          // to right\n\n          const base = data[0].data[abs];\n          const prev = data[0].data[abs - 1];\n          if (prev > base) {\n            let rest = prev - base;\n            this.label.current.setNativeProps({\n              text: `${Math.floor(base + percent * rest)}`\n            });\n          } else {\n            let rest = base - prev;\n            this.label.current.setNativeProps({\n              text: `${Math.floor(base - percent * rest)}`\n            });\n          }\n        } else {\n          // to left\n\n          const base = data[0].data[abs - 1];\n          const next = data[0].data[abs];\n          percent = 1 - percent;\n          if (next > base) {\n            let rest = next - base;\n            this.label.current.setNativeProps({\n              text: `${Math.floor(base + percent * rest)}`\n            });\n          } else {\n            let rest = base - next;\n            this.label.current.setNativeProps({\n              text: `${Math.floor(base - percent * rest)}`\n            });\n          }\n        }\n      }\n      lastIndex = index;\n    });\n\n    data.forEach(dataset => {\n      if (dataset.withScrollableDot == false) return;\n\n      const perData = width / dataset.data.length;\n      let values = [];\n      let yValues = [];\n      let xValues = [];\n\n      let yValuesLabel = [];\n      let xValuesLabel = [];\n\n      for (let index = 0; index < dataset.data.length; index++) {\n        values.push(index * perData);\n        const yval =\n          ((baseHeight -\n            this.calcHeight(\n              dataset.data[dataset.data.length - index - 1],\n              datas,\n              height\n            )) /\n            4) *\n            3 +\n          paddingTop;\n        yValues.push(yval);\n        const xval =\n          paddingRight +\n          ((dataset.data.length - index - 1) * (width - paddingRight)) /\n            dataset.data.length;\n        xValues.push(xval);\n\n        yValuesLabel.push(\n          yval - (scrollableInfoSize.height + scrollableInfoOffset)\n        );\n        xValuesLabel.push(xval - scrollableInfoSize.width / 2);\n      }\n\n      const translateX = scrollableDotHorizontalOffset.interpolate({\n        inputRange: values,\n        outputRange: xValues,\n        extrapolate: \"clamp\"\n      });\n\n      const translateY = scrollableDotHorizontalOffset.interpolate({\n        inputRange: values,\n        outputRange: yValues,\n        extrapolate: \"clamp\"\n      });\n\n      const labelTranslateX = scrollableDotHorizontalOffset.interpolate({\n        inputRange: values,\n        outputRange: xValuesLabel,\n        extrapolate: \"clamp\"\n      });\n\n      const labelTranslateY = scrollableDotHorizontalOffset.interpolate({\n        inputRange: values,\n        outputRange: yValuesLabel,\n        extrapolate: \"clamp\"\n      });\n\n      output.push([\n        <Animated.View\n          key={Math.random()}\n          style={[\n            scrollableInfoViewStyle,\n            {\n              transform: [\n                { translateX: labelTranslateX },\n                { translateY: labelTranslateY }\n              ],\n              width: scrollableInfoSize.width,\n              height: scrollableInfoSize.height\n            }\n          ]}\n        >\n          <TextInput\n            onLayout={() => {\n              this.label.current.setNativeProps({\n                text: `${Math.floor(data[0].data[data[0].data.length - 1])}`\n              });\n            }}\n            style={scrollableInfoTextStyle}\n            ref={this.label}\n          />\n        </Animated.View>,\n        <AnimatedCircle\n          key={Math.random()}\n          cx={translateX}\n          cy={translateY}\n          r={scrollableDotRadius}\n          stroke={scrollableDotStrokeColor}\n          strokeWidth={scrollableDotStrokeWidth}\n          fill={scrollableDotFill}\n        />\n      ]);\n    });\n\n    return output;\n  };\n\n  renderShadow = config => {\n    if (this.props.bezier) {\n      return this.renderBezierShadow(config);\n    }\n\n    const { data, width, height, paddingRight, paddingTop } = config;\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    return config.data.map((dataset, index) => {\n      return (\n        <Polygon\n          key={index}\n          points={\n            dataset.data\n              .map((d, i) => {\n                const x =\n                  paddingRight +\n                  (i * (width - paddingRight)) / dataset.data.length;\n                const y =\n                  ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\n                  paddingTop;\n                return `${x},${y}`;\n              })\n              .join(\" \") +\n            ` ${paddingRight +\n              ((width - paddingRight) / dataset.data.length) *\n                (dataset.data.length - 1)},${(height / 4) * 3 +\n              paddingTop} ${paddingRight},${(height / 4) * 3 + paddingTop}`\n          }\n          fill=\"url(#fillShadowGradient)\"\n          strokeWidth={0}\n        />\n      );\n    });\n  };\n\n  renderLine = config => {\n    if (this.props.bezier) {\n      return this.renderBezierLine(config);\n    }\n\n    const {\n      width,\n      height,\n      paddingRight,\n      paddingTop,\n      data,\n      linejoinType\n    } = config;\n    const output = [];\n    const datas = this.getDatas(data);\n    const baseHeight = this.calcBaseHeight(datas, height);\n    data.forEach((dataset, index) => {\n      const points = dataset.data.map((d, i) => {\n        const x =\n          (i * (width - paddingRight)) / dataset.data.length + paddingRight;\n        const y =\n          ((baseHeight - this.calcHeight(d, datas, height)) / 4) * 3 +\n          paddingTop;\n        return `${x},${y}`;\n      });\n      output.push(\n        <Polyline\n          key={index}\n          strokeLinejoin={linejoinType}\n          points={points.join(\" \")}\n          fill=\"none\"\n          stroke={this.getColor(dataset, 0.2)}\n          strokeWidth={this.getStrokeWidth(dataset)}\n        />\n      );\n    });\n\n    return output;\n  };\n\n  getBezierLinePoints = (dataset, config) => {\n    const { width, height, paddingRight, paddingTop, data } = config;\n    if (dataset.data.length === 0) {\n      return \"M0,0\";\n    }\n\n    const datas = this.getDatas(data);\n    const x = i =>\n      Math.floor(\n        paddingRight + (i * (width - paddingRight)) / dataset.data.length\n      );\n    const baseHeight = this.calcBaseHeight(datas, height);\n    const y = i => {\n      const yHeight = this.calcHeight(dataset.data[i], datas, height);\n      return Math.floor(((baseHeight - yHeight) / 4) * 3 + paddingTop);\n    };\n\n    return [`M${x(0)},${y(0)}`]\n      .concat(\n        dataset.data.slice(0, -1).map((_, i) => {\n          const x_mid = (x(i) + x(i + 1)) / 2;\n          const y_mid = (y(i) + y(i + 1)) / 2;\n          const cp_x1 = (x_mid + x(i)) / 2;\n          const cp_x2 = (x_mid + x(i + 1)) / 2;\n          return (\n            `Q ${cp_x1}, ${y(i)}, ${x_mid}, ${y_mid}` +\n            ` Q ${cp_x2}, ${y(i + 1)}, ${x(i + 1)}, ${y(i + 1)}`\n          );\n        })\n      )\n      .join(\" \");\n  };\n\n  renderBezierLine = config => {\n    return config.data.map((dataset, index) => {\n      const result = this.getBezierLinePoints(dataset, config);\n      return (\n        <Path\n          key={index}\n          d={result}\n          fill=\"none\"\n          stroke={this.getColor(dataset, 0.2)}\n          strokeWidth={this.getStrokeWidth(dataset)}\n        />\n      );\n    });\n  };\n\n  renderBezierShadow = config => {\n    const { width, height, paddingRight, paddingTop, data } = config;\n    return data.map((dataset, index) => {\n      const d =\n        this.getBezierLinePoints(dataset, config) +\n        ` L${paddingRight +\n          ((width - paddingRight) / dataset.data.length) *\n            (dataset.data.length - 1)},${(height / 4) * 3 +\n          paddingTop} L${paddingRight},${(height / 4) * 3 + paddingTop} Z`;\n      return (\n        <Path\n          key={index}\n          d={d}\n          fill=\"url(#fillShadowGradient)\"\n          strokeWidth={0}\n        />\n      );\n    });\n  };\n\n  renderLegend = (width, legendOffset) => {\n    const { legend, datasets } = this.props.data;\n    const baseLegendItemX = width / (legend.length + 1);\n\n    return legend.map((legendItem, i) => (\n      <G key={Math.random()}>\n        <LegendItem\n          index={i}\n          iconColor={this.getColor(datasets[i], 0.9)}\n          baseLegendItemX={baseLegendItemX}\n          legendText={legendItem}\n          labelProps={{ ...this.getPropsForLabels() }}\n          legendOffset={legendOffset}\n        />\n      </G>\n    ));\n  };\n\n  render() {\n    const {\n      width,\n      height,\n      data,\n      withScrollableDot = false,\n      withShadow = true,\n      withDots = true,\n      withInnerLines = true,\n      withOuterLines = true,\n      withHorizontalLabels = true,\n      withVerticalLabels = true,\n      style = {},\n      decorator,\n      onDataPointClick,\n      verticalLabelRotation = 0,\n      horizontalLabelRotation = 0,\n      formatYLabel = yLabel => yLabel,\n      formatXLabel = xLabel => xLabel,\n      segments,\n      transparent = false\n    } = this.props;\n    const { scrollableDotHorizontalOffset } = this.state;\n    const { labels = [] } = data;\n    const {\n      borderRadius = 0,\n      paddingTop = 16,\n      paddingRight = 64,\n      margin = 0,\n      marginRight = 0,\n      paddingBottom = 0\n    } = style;\n\n    const config = {\n      width,\n      height,\n      verticalLabelRotation,\n      horizontalLabelRotation\n    };\n\n    const datas = this.getDatas(data.datasets);\n\n    let count = Math.min(...datas) === Math.max(...datas) ? 1 : 4;\n    if (segments) {\n      count = segments;\n    }\n\n    const legendOffset = this.props.data.legend ? height * 0.15 : 0;\n\n    return (\n      <View style={style}>\n        <Svg\n          height={height + paddingBottom + legendOffset}\n          width={width - margin * 2 - marginRight}\n        >\n          <Rect\n            width=\"100%\"\n            height={height + legendOffset}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n            fillOpacity={transparent ? 0 : 1}\n          />\n          {this.props.data.legend &&\n            this.renderLegend(config.width, legendOffset)}\n          <G x=\"0\" y={legendOffset}>\n            {this.renderDefs({\n              ...config,\n              ...this.props.chartConfig\n            })}\n            <G>\n              {withInnerLines\n                ? this.renderHorizontalLines({\n                    ...config,\n                    count: count,\n                    paddingTop,\n                    paddingRight\n                  })\n                : withOuterLines\n                ? this.renderHorizontalLine({\n                    ...config,\n                    paddingTop,\n                    paddingRight\n                  })\n                : null}\n            </G>\n            <G>\n              {withHorizontalLabels\n                ? this.renderHorizontalLabels({\n                    ...config,\n                    count: count,\n                    data: datas,\n                    paddingTop,\n                    paddingRight,\n                    formatYLabel,\n                    decimalPlaces: this.props.chartConfig.decimalPlaces\n                  })\n                : null}\n            </G>\n            <G>\n              {withInnerLines\n                ? this.renderVerticalLines({\n                    ...config,\n                    data: data.datasets[0].data,\n                    paddingTop,\n                    paddingRight\n                  })\n                : withOuterLines\n                ? this.renderVerticalLine({\n                    ...config,\n                    paddingTop,\n                    paddingRight\n                  })\n                : null}\n            </G>\n            <G>\n              {withVerticalLabels\n                ? this.renderVerticalLabels({\n                    ...config,\n                    labels,\n                    paddingRight,\n                    paddingTop,\n                    formatXLabel\n                  })\n                : null}\n            </G>\n            <G>\n              {this.renderLine({\n                ...config,\n                ...this.props.chartConfig,\n                paddingRight,\n                paddingTop,\n                data: data.datasets\n              })}\n            </G>\n            <G>\n              {withShadow &&\n                this.renderShadow({\n                  ...config,\n                  data: data.datasets,\n                  paddingRight,\n                  paddingTop\n                })}\n            </G>\n            <G>\n              {withDots &&\n                this.renderDots({\n                  ...config,\n                  data: data.datasets,\n                  paddingTop,\n                  paddingRight,\n                  onDataPointClick\n                })}\n            </G>\n            <G>\n              {withScrollableDot &&\n                this.renderScrollableDot({\n                  ...config,\n                  ...this.props.chartConfig,\n                  data: data.datasets,\n                  paddingTop,\n                  paddingRight,\n                  onDataPointClick,\n                  scrollableDotHorizontalOffset\n                })}\n            </G>\n            <G>\n              {decorator &&\n                decorator({\n                  ...config,\n                  data: data.datasets,\n                  paddingTop,\n                  paddingRight\n                })}\n            </G>\n          </G>\n        </Svg>\n        {withScrollableDot && (\n          <ScrollView\n            style={StyleSheet.absoluteFill}\n            contentContainerStyle={{ width: width * 2 }}\n            showsHorizontalScrollIndicator={false}\n            scrollEventThrottle={16}\n            onScroll={Animated.event([\n              {\n                nativeEvent: {\n                  contentOffset: { x: scrollableDotHorizontalOffset }\n                }\n              }\n            ])}\n            horizontal\n            bounces={false}\n          />\n        )}\n      </View>\n    );\n  }\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}